# Completions
autoload -U compinit; compinit
# Allow to select in a menu
zstyle ':completion:*' menu select
# Case insensitive, partial words
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

setopt MENU_COMPLETE        # Automatically highlight first element of completion menu
setopt AUTO_LIST            # Automatically list choices on ambiguous completion.
setopt COMPLETE_IN_WORD     # Complete from both ends of a word.

# colors in completion
[[ -z "$LS_COLORS" ]] || zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# use emacs key bindings
bindkey -e

# User configuration

# homebrew fix on apple silicon mac
eval "$(/opt/homebrew/bin/brew shellenv)"
# for rosetta compatible run
# eval "$(/usr/local/bin/brew shellenv)"

# node version manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash/zsh completion

# rust
. "$HOME/.cargo/env"

# fzf keybindings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# various setups
for file in ~/.config/zsh/*; do
  source "$file"
done

# no ctrl + d
set -o ignoreeof

# unicode in alacritty https://github.com/tmux/tmux/issues/328
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# vim
export MANPAGER="nvim +Man!" # man in vim
export EDITOR="nvim"
export VISUAL="nvim"
alias vim="nvim"

setopt PROMPT_SUBST
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1

# PATH
export PATH=$PATH:~/.local/bin

# colors in prompt
autoload -U colors && colors

# prompt config
#  - e0b6  - e0d6  - e0ba
#  - e0bc  - e0a0 󰇥 - f01e5
PROMPT='$(prompt_yazi)%{$fg[yellow]$fg[white]$bg[yellow]%}%n%{$bg[cyan]$fg[yellow]%}%{$bg[cyan]$fg[white]%}%c%{$reset_color%}$(check_git_repo)$(prompt_end)'
RPROMPT=''

function prompt_yazi() {
  if [ -n "$YAZI_LEVEL" ]; then
    echo "%{$fg[red]$bg[red]$fg[white]%} 󰇥 %{$reset_color$fg[red]$reset_color%} "
  fi
}

function check_git_repo() {
  if [ -z $(git rev-parse --git-dir 2> /dev/null) ]; then
    echo "%{$reset_color$fg[cyan]$reset_color%}"
  else
    echo "%{$fg[cyan]$bg[red]$fg[white]$bg[red] $(__git_ps1 ' %s ')$reset_color$fg[red]$reset_color%}"
  fi
}

function prompt_end() {
  echo "%{$reset_color%}"$'\n'"$ "
}

function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

alias pr="cd $HOME/Projects"
