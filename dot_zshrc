export ZSH="$HOME/.oh-my-zsh"

# Example format: plugins=(rails git textmate ruby lighthouse)

source $ZSH/oh-my-zsh.sh

# User configuration

# homebrew fix on apple silicon mac
eval "$(/opt/homebrew/bin/brew shellenv)"

# node version manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# fzf keybindings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# various scripts
for file in ~/.config/zsh/*; do
  source "$file"
done

# no ctrl + d
set -o ignoreeof

# unicode in alacritty https://github.com/tmux/tmux/issues/328
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# vim
export MANPAGER="nvim +Man!" # man in vim
export EDITOR="nvim"
alias vim="nvim"

setopt PROMPT_SUBST
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1

# prompt config
PROMPT='%{$fg[yellow]$fg[white]$bg[yellow]%}%n%{$bg[cyan]$fg[yellow]%}%{$bg[cyan]$fg[white]%}%c%{$reset_color%}$(check_git_repo)$(prompt_end)'
RPROMPT=''

function check_git_repo() {
  if [ -z $(git rev-parse --git-dir 2> /dev/null) ]; then
    echo "%{$reset_color$fg[cyan]$reset_color%}"
  else
    echo "%{$fg[cyan]$bg[red]$fg[white]$bg[red] $(__git_ps1 ' %s ')$reset_color$fg[red]$reset_color%}"
  fi
}

function prompt_end() {
  echo "%{$reset_color%}"$'\n'"$ "
}
